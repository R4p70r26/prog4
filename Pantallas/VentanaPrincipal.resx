<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAJSIAAAEAIADgFAAAFgAAACgAAAAlAAAARAAAAAEAIAAAAAAAqBMAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABbH7TwWx+/8Fsfv/BbH7/wWx+/8Fsfv/BbH7/wWx
        +/8Fsfv/BbH7/wWx+/8Fsfv/BbH7/wWx+/8Fsfv/BbH7/wWx+/8Fsfv/BbH7/wWx+/8Fsfv/BbH7/wWx
        +1MAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWx
        +3YFsfv/BbH7/wWx+/8Fsfv/BbH7/wWx+/8Fsfv/BbH7/wWx+/8Fsfv/BbH7/wWx+/8Fsfv/BbH7/wWx
        +/8Fsfv/BbH7/wWx+/8Fsfv/BbH7/wWx+/8Fsft7AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFsfufBbH7/wWx+/8Fsfv/BbH7/wWx+/8Fsfv/BbH7/wWx
        +/8Fsfv/BbH7/wWx+/8Fsfv/BbH7/wWx+/8Fsfv/BbH7/wWx+/8Fsfv/BbH7/wWx+/8Fsfv/BbH7oQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAZ7i7QGb
        3f8Bm93/AZvd/wGb3f8Bm93/AZvd/wGb3f8Bm93/AZvd/wGb3f8Bm93/AZvd/wGb3f8Bm93/AZvd/wGb
        3f8Bm93/AZvd/wGb3f8Bm93/AZvd/wGe4u4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAABi1+fMXtfn/F7X5/xe1+f8Xtfn/F7X5/xe1+f8Xtfn/F7X5/xe1
        +f8Xtfn/F7X5/xe1+f8Xtfn/F7X5/xe1+f8Xtfn/F7X5/xe1+f8Xtfn/F7X5/xe1+f8Ytfn0AAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABK1/Bcrvf3/K739/yu9
        /f8rvf3/K739/yu9/f8rvf3/K739/yu9/f8rvf3/K739/yu9/f8rvf3/K739/yu9/f8rvf3/K739/yu9
        /f8rvf3/K739/yu9/f8rvf3/K739/xW2/BkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAFsfs+Kb7+/zTC//80wv//NML//zTC//80wv//M8H+/yS8/f8Utvz/DLT8/wWx
        +/8Fsfv/BbH7/wSv+f8DrPb/Aqjx/wGm7/8Bpu//Aabv/wGm7/8Bpu//Aabv/wGm7/8Fsfs9AAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABbH7ZDfD//87xP//O8T//zvE
        //86xP//I7z9/wqz+/8Fsfv/BbH7/wWx+/8Fsfv/BbH7/wWx+/8Fsfv/BbH7/wWx+/8Ervf/Aabv/wCk
        7f8ApO3/AKTt/wCk7f8ApO3/BK/4bgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAA20/Jc7xP//O8T//zvE//81wv//EbX8/wWx+/8Fsfv/BbH7/wWx+/8Fsfv/BbH7/wWx
        +/8Fsfv/BbH7/wWx+/8Fsfv/BbH7/wWx+/8CqfP/AKTt/wCk7f8ApO3/AKTt/wOs9qYAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAXt/zHO8T//zvE//80wf7/C7P7/wWx
        +/8Fsfv/BbH7/wWx+/8Fsfv/BbH7/wWx+/8Fsfv/BbH7/wWx+/8Fsfv/BbH7/wWx+/8Fsfv/BbH7/wKq
        9P8ApO3/AKTt/wCk7f8Dq/TPAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAH7r97DvE//83w///DbT8/wWx+/8Fsfv/BbH7/wWx+/8Fsfv/BbH7/wWx+/8Fsfv/BbH7/wWx
        +/8Fsfv/BbH7/wWx+/8Fsfv/BbH7/wWx+/8Fsfv/Aqny/wCk7f8ApO3/Aqnz7QAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABbH7Bia9/f47xP//F7f8/wWx+/8Fsfv/BbH7/wWx
        +/8Fsfv/BbH7/wWx+/8Fsfv/BbH7/wWx+/8Fsfv/BbH7/wWx+/8Fsfv/BbH7/wWx+/8Fsfv/BbH7/wWx
        +/8BpvD/AKTt/wGo8f4FsfsEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWx
        +ywwwP7/Kr7+/wWx+/8Fsfv/BbH7/wWx+/8Fsfv/BbH7/wWx+/8Fsfv/BbH7/wWx+/8Fsfv/BbH7/wWx
        +/8Fsfv/BbH7/wWx+/8Fsfv/BbH7/wWx+/8Fsfv/BK/4/wCk7f8Bpu//BbH7JAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGsftTOMP//w20/P8Fsfv/BbH7/wWx+/8Fsfv/BbH7/wWx
        +/8Fsfv/BbH7/wWx+/8Fsfv/BbH7/wWx+/8Fsfv/BbH7/wWx+/8Fsfv/BbH7/wWx+/8Fsfv/BbH7/wWx
        +/8CqfL/AKTt/wWw+lAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAErb8jSq+
        /v8Fsfv/BbH7/wWx+/8Fsfv/BbH7/wWx+/8Fsfv/BbH7/wWx+/8Fsfv/BbH7/wWx+/8Fsfv/BbH7/wWx
        +/8Fsfv/BbH7/wWx+/8Fsfv/BbH7/wWx+/8Fsfv/BK/5/wCk7f8DrfeIAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAABy5/b8Ttvz/BbH7/wWx+/8Fsfv/BbH7/wWx+/8Fsfv/BbH7/wWx
        +/8Fsfv/BbH7/wWx+/8Fsfv/BbH7/wWx+/8Fsfv/BbH7/wWx+/8Fsfv/BbH7/wWx+/8Fsfv/BbH7/wWx
        +/8CqfL/A6v1uQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAduf3fBbH7/wWx
        +/8Fsfv/BbH7/wWx+/8Fsfv/BbH7/wWx+/8Fsfv/BbH7/wWx+/8Fsfv/BbH7/wWx+/8Fsfv/BbH7/wWx
        +/8Fsfv/BbH7/wWx+/8Fsfv/BbH7/wWx+/8Fsfv/BK73/wKq890AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAFLb89QWx+/8Fsfv/BbH7/wWx+/8Fsfv/BbH7/wWx+/8Fsfv/BbH7/wWx
        +/8Fsfv/BbH7/wWx+/8Fsfv/BbH7/wWx+/8Fsfv/BbH7/wWx+/8Fsfv/BbH7/wWx+/8Fsfv/BbH7/wWx
        +/8CqvPzAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABbH7Gg60/P8Fsfv/BbH7/wWx
        +/8Fsfv/BbH7/way+/8Qtfz/G7n9/xO2/P8Gsfv/BbH7/wWx+/8Fsfv/BbH7/wWx+/8Fsfv/BbH7/wWx
        +/8Fsfv/B7L7/xS2/P8Ttvz/B7L7/wWx+/8Fsfv/A632/wWx+w0AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAqz+0UKs/v/BbH7/wWx+/8Fsfv/BbH71QWx+1UFsfsYBbH7MBG1/Kctv/7/NcL//xK2
        /P8Fsfv/BbH7/wWx+/8Fsfv/BbH7/wWx++sFsftrBbH7HgWx+xwGsftjG7n97jXC//8ZuPz/BbH7/wSu
        +P8FsfszAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMtPxyBbH7/wWx+/8Fsfv/BbH7uQWx
        +woAAAAAAAAAAAAAAAAAAAAABrH7Uia9/f45w///DLP8/wWx+/8Fsfv/BbH7/wWx+9MFsfsXAAAAAAAA
        AAAAAAAAAAAAAAWx+xUWt/zZOcP//xG1/P8FsPr/BLD5YgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAABbH7kAWx+/8Fsfv/BbH72gWx+w4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHsvt2MMD+/yC6
        /f8Fsfv/BbH7/wWx++gFsfsYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABbH7GB66/fEkvP3/BbH7/wWx
        +4EAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWx+7gFsfv/BbH7/wWx+0UAAAAAAAAAAAAA
        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
        AACAeAHwCAAAAMH8AfwYAAAA//4D//gAAAA=
</value>
  </data>
</root>